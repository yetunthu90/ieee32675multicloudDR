name: Laravel CI/CD with Docker Compose

on:
  push:
    branches:
      - dev

jobs:
  Application-Build-Test-Pushed:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.set_version.outputs.VERSION }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # #STEP 1: Create Laravel .env securely
      # - name: Create Laravel .env file
      #   run: |
      #     echo "APP_ENV=\"${{ secrets.APP_ENV }}\"" >> .env
      #     echo "APP_KEY=" >> .env
      #     echo "DB_CONNECTION=\"${{ secrets.DB_CONNECTION }}\"" >> .env
      #     echo "DB_HOST=\"${{ secrets.DB_HOST }}\"" >> .env
      #     echo "DB_PORT=\"${{ secrets.DB_PORT }}\"" >> .env
      #     echo "DB_DATABASE=\"${{ secrets.DB_DATABASE }}\"" >> .env
      #     echo "DB_USERNAME=\"${{ secrets.DB_USERNAME }}\"" >> .env
      #     echo "DB_PASSWORD=\"${{ secrets.DB_PASSWORD }}\"" >> .env


      # # STEP 2: Start Docker Compose with secrets
      # - name: Start Docker Compose Services
      #   env:
      #     DB_HOST: ${{ secrets.DB_HOST }}
      #     DB_PORT: ${{ secrets.DB_PORT }}
      #     DB_DATABASE: ${{ secrets.DB_DATABASE }}
      #     DB_USERNAME: ${{ secrets.DB_USERNAME }}
      #     DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      #   run: docker compose up -d --build

      - name: Start Docker Compose Services
        run: |
          docker compose up -d --build

      # STEP 3: Wait longer for containers to start
      - name: Wait for all Containers to Be Ready
        run: sleep 5

      - name: Show Docker Compose Images
        run: docker compose images

      - name: Install Dependencies
        run: docker compose exec app composer install

      - name: Generate Laravel APP_KEY
        run: docker compose exec app php artisan key:generate

      - name: Run Migrations
        run: docker compose exec app php artisan migrate --force

      - name: Run Tests
        run: docker compose exec app php artisan test

      - name: Stop and Remove Containers
        run: docker compose down

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set Version
        id: set_version
        run: |
          echo "VERSION=$(date +%Y%m%d%H%M%S)" >> $GITHUB_ENV
          echo "VERSION=$(date +%Y%m%d%H%M%S)" >> $GITHUB_OUTPUT

      - name: Push App Image
        run: |
          docker tag ieee32675multiclouddr-app ${{ secrets.DOCKER_USERNAME }}/multidrapp:$VERSION
          docker push ${{ secrets.DOCKER_USERNAME }}/multiclouddrapp:$VERSION
      
          docker tag ieee32675multiclouddr-web ${{ secrets.DOCKER_USERNAME }}/multiclouddrweb:$VERSION
          docker push ${{ secrets.DOCKER_USERNAME }}/multidrweb:$VERSION
      
          docker tag ieee32675multiclouddr-database ${{ secrets.DOCKER_USERNAME }}/multiclouddrdatabase:$VERSION
          docker push ${{ secrets.DOCKER_USERNAME }}/multidrdb:$VERSION
